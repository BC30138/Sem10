library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1.fit <- kknn(Survived ~ ., A_train, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(train1.fit)
plot(train1.fit)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1.fit <- kknn(Survived ~ ., A_check, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(train1.fit)
plot(train1.fit)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1.fit <- kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(train1.fit)
plot(train1.fit)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1.fit <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(train1.fit)
plot(train1.fit)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1.fit <- train.kknn(Survived ~ ., A_train, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(train1.fit)
plot(train1.fit)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., A_train, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(train1)
plot(train1)
View(train1)
View(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., A_train, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(train1)
A_classifier <- kknn(V10~., A_train, A_test, k = 25, kernel = "optimal")
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., A_train, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(train1)
A_classifier <- kknn(Survived~., A_train, A_test, k = 25, kernel = "optimal")
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., A_train, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(train1)
A_classifier <- kknn(Survived~., A_check, A_test, k = 25, kernel = "optimal")
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., A_train, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(train1)
A<- B + B
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., A_test, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., A_test, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
myTable <- table(fitted(train1), A_check$Survived)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., A_test, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
myTable <- table(fitted(train1), A_check$Survived)
print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., A_test, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., A_test, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
#print(train1)
#plot(train1)
model <- kknn(Survived~., A_train, A_test, k = 25, kernel = "optimal")
myTable <- table(fitted(model), A_check$Survived)
myTable
(myTable[2] + myTable[3])/(dim(A_test)[1])
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
#print(train1)
#plot(train1)
model <- kknn(Survived~., A_train, A_test, k = 10, kernel = "optimal")
myTable <- table(fitted(model), A_check$Survived)
myTable
(myTable[2] + myTable[3])/(dim(A_test)[1])
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
#print(train1)
#plot(train1)
model <- kknn(Survived~., A_train, A_test, k = 10, kernel = "optimal")
myTable <- table(model, A_check$Survived)
myTable
(myTable[2] + myTable[3])/(dim(A_test)[1])
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
#train1 <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
#print(train1)
#plot(train1)
model <- kknn(Survived~., A_test, A_check, k = 10, kernel = "optimal")
myTable <- table(model, A_check$Survived)
myTable
(myTable[2] + myTable[3])/(dim(A_test)[1])
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., B, kmax = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., B, k = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
A_test <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/test.csv", stringsAsFactors = TRUE)
A_check <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/gender_submission.csv", stringsAsFactors = TRUE)
B <- A_train[,-1]
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
train1 <- train.kknn(Survived ~ ., B, k = floor(sqrt(dim(B)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
#myTable <- table(fitted(train1), A_check$Survived)
#print(myTable)
print(train1)
plot(train1)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
B <- train.kknn(Survived ~ .,
A_train[,-1],
k = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 2)
print(B)
plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
B <- train.kknn(Survived ~ .,
A_train[,-1],
k = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(B)
plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
B <- train.kknn(Survived ~ .,
C,
k = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(B)
plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
B <- train.kknn(Survived ~ .,
C,
k = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(B)
plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
B <- train.kknn(Survived ~ ., A_train[,-1],k = floor(sqrt(dim(A_train)[1]))+5,kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
print(B)
plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
B.fit <- train.kknn(Survived ~ ., A_train[,-1],k = floor(sqrt(dim(A_train)[1]))+5,kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
print(B.fit)
plot(B.fit)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
fit.B <- train.kknn(Survived ~ ., A_train[,-1],k = floor(sqrt(dim(A_train)[1]))+5,kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
print(fit.B)
plot(fit.B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
B <- train.kknn(Survived ~ ., A_train[,-1], kmax = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(B)
plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
B <- train.kknn(Survived ~ .,
A_train[,-1],
kmax = floor(sqrt(dim(A_train)[1])),
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv","gaussian","biweight"),
distance = 1)
print(B)
plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
C <- A_train[,-1]
B <- train.kknn(Survived ~ .,
A_train[,-1],
kmax = floor(sqrt(dim(A_train)[1])),
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv","gaussian","biweight","triweight","cos"),
distance = 1)
print(B)
#plot(B)
library(kknn)
A_train <- read.csv("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/1Lab/train.csv", stringsAsFactors = TRUE)
B <- train.kknn(Survived ~ .,
A_train[,-1],
kmax = dim(A_train)[1],
#kmax = floor(sqrt(dim(A_train)[1])),
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv","gaussian","biweight","triweight","cos"),
distance = 1)
print(B)
library(kknn)
A_train <- read.table("svmdata4.txt", stringsAsFactors = TRUE)
A_test <- read.table("svmdata4test.txt", stringsAsFactors = TRUE)
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
fit.train1 <- train.kknn(Colors ~ ., A_train, kmax = floor(sqrt(dim(A_train)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
print(fit.train1)
par(mfrow = c(1, 2))
plot(A_train$X1, A_train$X2, pch=21, bg=c("red","blue") [unclass(A_train$Colors)],  main="My train data")
plot(fit.train1)
library(kknn)
A_train <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4.txt", stringsAsFactors = TRUE)
A_test <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4test.txt", stringsAsFactors = TRUE)
#fit.kknn <- kknn(Colors ~ ., A_train, A_test)
## запускаем процедуру train.kknn, используя
## расстояние Минковского с параметром 1 и с различными ядрами, максимальное K для поиска оптимального K равно 15
fit.train1 <- train.kknn(Colors ~ ., A_train, kmax = floor(sqrt(dim(A_train)[1]))+5, kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"), distance = 1)
print(fit.train1)
par(mfrow = c(1, 2))
plot(A_train$X1, A_train$X2, pch=21, bg=c("red","blue") [unclass(A_train$Colors)],  main="My train data")
plot(fit.train1)
View(A_test)
View(A_test)
library(kknn)
A_train <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4.txt", stringsAsFactors = TRUE)
A_test <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4test.txt", stringsAsFactors = TRUE)
A_result <- train.kknn(Colors ~ .,
A_train,
kmax = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(A_result)
par(mfrow = c(1, 2))
plot(A_train$X1, A_train$X2, pch = 21, bg = c("magenta","green") [unclass(A_train$Colors)])
plot(A_result)
View(A_check)
View(A_check)
View(A_result)
View(A_result)
View(A_test)
View(A_test)
library(kknn)
A_train <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4.txt", stringsAsFactors = TRUE)
A_test <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4test.txt", stringsAsFactors = TRUE)
A_result <- train.kknn(Colors ~ .,
A_train,
kmax = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(A_result)
par(mfrow = c(1, 2))
plot(A_train$X1, A_train$X2,
col = ifelse(A_train$Colors == 'green', "green", "red"),
xlab = "X1", ylab = "X2")
#plot(A_train$X1, A_train$X2, pch = 21, bg = c("magenta","green") [unclass(A_train$Colors)])
plot(A_result)
library(kknn)
A_train <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4.txt", stringsAsFactors = TRUE)
A_test <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4test.txt", stringsAsFactors = TRUE)
A_result <- train.kknn(Colors ~ .,
A_train,
kmax = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(A_result)
#par(mfrow = c(1, 2))
plot(A_train$X1, A_train$X2,
col = ifelse(A_train$Colors == 'green', "green", "red"),
xlab = "X1", ylab = "X2")
#plot(A_train$X1, A_train$X2, pch = 21, bg = c("magenta","green") [unclass(A_train$Colors)])
plot(A_result)
library(kknn)
A_train <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4.txt", stringsAsFactors = TRUE)
A_test <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4test.txt", stringsAsFactors = TRUE)
A_result <- train.kknn(Colors ~ .,
A_train,
kmax = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(A_result)
#par(mfrow = c(1, 2))
plot(A_train$X1, A_train$X2,
col = ifelse(A_train$Colors == 'green', "green", "red"),
xlab = "X1", ylab = "X2")
#plot(A_train$X1, A_train$X2, pch = 21, bg = c("magenta","green") [unclass(A_train$Colors)])
plot(A_result)
library(kknn)
A_train <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4.txt", stringsAsFactors = TRUE)
A_test <- read.table("C:/Users/anna_fox/Documents/UNIVERSE/4 курс/2 semester/Нейронные_сети/All_Labs/2Lab/svmdata4test.txt", stringsAsFactors = TRUE)
A_result <- train.kknn(Colors ~ .,
A_train,
kmax = floor(sqrt(dim(A_train)[1]))+5,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal", "inv"),
distance = 1)
print(A_result)
par(mfrow = c(1, 2))
plot(A_train$X1, A_train$X2,
col = ifelse(A_train$Colors == 'green', "green", "red"),
xlab = "X1", ylab = "X2")
#plot(A_train$X1, A_train$X2, pch = 21, bg = c("magenta","green") [unclass(A_train$Colors)])
plot(A_result)
